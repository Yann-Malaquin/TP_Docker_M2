version: "3.9"

services:
  # Service pour le frontend
  angular:
    build:
      context: ./frontAngular
      dockerfile: Dockerfile
    ports:
      - 4200:4200
    container_name: annuaire-angular

  # Service pour le back
  spring:
    build:
      context: ./Annuaire
      dockerfile: Dockerfile
    environment:
      SPRING_DATASOURCE_USERNAME: sa
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
    ports:
      - 8082:8082
      - 8001:8001
    depends_on:
      - db
      - kafka
    container_name: annuaire-spring

 # Service pour la BDD postgreSQL
  db:
    image: postgres:9.6.24
    environment:
      POSTGRES_USER: sa
      POSTGRES_DB: test
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - datadb:/var/lib/postgresql/data
    ports:
      - 5432:5432
    container_name: annuaire-postgres

  # Service pour adminer, permet de voir la BDD
  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    container_name: annuaire-adminer

  # Service pour zookeeper, serveur apache pour kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:6.1.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - 2181:2181
    container_name: annuaire-zookeeper

  # Service pour kafka
  kafka:
    build:
      context: ./dockerfile/kafka
      dockerfile: Dockerfile
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    hostname: kafka
    links:
      - zookeeper
    container_name: annuaire-kafka

  # Service pour initialiser kafka, cr√©ation des topics etc
  init-kafka:
    image: confluentinc/cp-kafka:6.1.1
    command: "bash -c 'kafka-topics --bootstrap-server kafka:9092 --list && \
                       kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists \
                                    --topic annuaire --replication-factor 1 --partitions 1 && \
                       kafka-topics --bootstrap-server kafka:9092 --list'"
    container_name: annuaire-init-kafka
    depends_on:
    - kafka

# Volume permettant de persister la BDD, le dossier se situera dans le dossier du projet
volumes:
  datadb:

# Le reseau du projet
networks:
  default:
    name: annuaire-network

